package org.springblade.anbiao.cheliangguanli.controller;

import cn.hutool.core.util.IdUtil;
import cn.hutool.core.util.StrUtil;
import cn.hutool.json.JSONArray;
import cn.hutool.json.JSONObject;
import cn.hutool.json.JSONUtil;
import cn.hutool.poi.excel.ExcelReader;
import cn.hutool.poi.excel.ExcelUtil;
import io.swagger.annotations.*;
import lombok.AllArgsConstructor;
import org.springblade.anbiao.cheliangguanli.entity.*;
import org.springblade.anbiao.cheliangguanli.page.CheliangrenyuanbangdingPage;
import org.springblade.anbiao.cheliangguanli.page.VehiclePage;
import org.springblade.anbiao.cheliangguanli.service.ICheliangrenyuanbangdingService;
import org.springblade.anbiao.cheliangguanli.service.IVehicleService;
import org.springblade.anbiao.cheliangguanli.vo.CheliangrenyuanbangdingVO;
import org.springblade.anbiao.cheliangguanli.vo.VehicleVO;
import org.springblade.anbiao.configure.entity.Configure;
import org.springblade.anbiao.configure.service.IConfigureService;
import org.springblade.anbiao.jiashiyuan.entity.JiaShiYuan;
import org.springblade.anbiao.jiashiyuan.service.IJiaShiYuanService;
import org.springblade.core.log.annotation.ApiLog;
import org.springblade.core.secure.BladeUser;
import org.springblade.core.tool.api.R;
import org.springblade.core.tool.utils.StringUtil;
import org.springblade.gps.entity.VehiclePT;
import org.springblade.gps.feign.IGpsPointDataClient;
import org.springblade.system.entity.Dept;
import org.springblade.system.feign.ISysClient;
import org.springblade.upload.upload.feign.IFileUploadClient;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author :elvis.he
 * @program : SafetyStandards
 * @description: VehicleController
 * @create : 2019-04-22 17:50
 */
@RestController
@RequestMapping("/anbiao/vehicle")
@AllArgsConstructor
@Api(value = "车辆资料管理", tags = "车辆资料管理")
public class VehicleController {
    private IVehicleService vehicleService;
    private IConfigureService mapService;
	private IFileUploadClient fileUploadClient;
	private ICheliangrenyuanbangdingService cheliangrenyuanbangdingService;
	private IJiaShiYuanService iJiaShiYuanService;
	private ISysClient iSysClient;
	private IGpsPointDataClient iGpsPointDataClient;

    @PostMapping("/list")
	@ApiLog("分页-车辆资料管理")
    @ApiOperation(value = "分页-车辆资料管理", notes = "传入VehiclePage", position = 1)
    public R<VehiclePage<VehicleVO>> list(@RequestBody VehiclePage vehiclepage) {
		vehiclepage.setCheliangleixing("2");
        VehiclePage<VehicleVO> pages = vehicleService.selectVehiclePage(vehiclepage);
		List<VehicleVO>  list=pages.getRecords();
		for (int i = 0; i <list.size() ; i++) {
			//车辆照片
			if(StrUtil.isNotEmpty(list.get(i).getCheliangzhaopian())){
				list.get(i).setCheliangzhaopian(fileUploadClient.getUrl(list.get(i).getCheliangzhaopian()));
			}
			//燃料消耗附件
			if(StrUtil.isNotEmpty(list.get(i).getRanliaoxiaohaofujian())){
				list.get(i).setRanliaoxiaohaofujian(fileUploadClient.getUrl(list.get(i).getRanliaoxiaohaofujian()));
			}
			//行驶证附件
			if(StrUtil.isNotEmpty(list.get(i).getXingshifujian())){
				list.get(i).setXingshifujian(fileUploadClient.getUrl(list.get(i).getXingshifujian()));
			}
		}
        return R.data(pages);
    }

    @GetMapping("/detail")
	@ApiLog("详情-车辆资料管理")
    @ApiOperation(value = "详情-车辆资料管理", notes = "传入id", position = 2)
    public R<VehicleVO> detail(String id) {
        VehicleVO detail = vehicleService.selectByKey(id);
		//车辆照片
		if(StrUtil.isNotEmpty(detail.getCheliangzhaopian())){
			detail.setCheliangzhaopian(fileUploadClient.getUrl(detail.getCheliangzhaopian()));
		}
		//燃料消耗附件
		if(StrUtil.isNotEmpty(detail.getRanliaoxiaohaofujian())){
			detail.setRanliaoxiaohaofujian(fileUploadClient.getUrl(detail.getRanliaoxiaohaofujian()));
		}
		//行驶证附件
		if(StrUtil.isNotEmpty(detail.getXingshifujian())){
			detail.setXingshifujian(fileUploadClient.getUrl(detail.getXingshifujian()));
		}
        return R.data(detail);
    }

	@GetMapping("/selectByCL")
	@ApiLog("车牌搜索")
	@ApiOperation(value = "车牌搜索", notes = "传入postId,cheliangpaizhao", position = 2)
	@ApiImplicitParams({ @ApiImplicitParam(name = "postId", value = "岗位id", required = true),
		@ApiImplicitParam(name = "cheliangpaizhao", value = "车辆牌照", required = false)
	})
	public R<List<VehicleCP>> selectByCL(String postId,String cheliangpaizhao) {
		Dept dept=iSysClient.selectByJGBM("机构",postId);
		List<VehicleCP> detail = vehicleService.selectCL(dept.getId().toString(),cheliangpaizhao);
		return R.data(detail);
	}

	@GetMapping("/selectByCPYS")
	@ApiLog("牌照和颜色-获取数据")
	@ApiOperation(value = "牌照和颜色-获取数据", notes = "传入cheliangpaizhao和chepaiyanse", position = 2)
	public R<Map<String,Object>> selectByCPYS(String cheliangpaizhao,String chepaiyanse) {
		Map<String,Object> map = new HashMap<String,Object>();
		VehicleVO vehicleVO = vehicleService.selectByCPYS(cheliangpaizhao,chepaiyanse);
		//车辆照片
		if(StrUtil.isNotEmpty(vehicleVO.getCheliangzhaopian())){
			vehicleVO.setCheliangzhaopian(fileUploadClient.getUrl(vehicleVO.getCheliangzhaopian()));
		}
		//燃料消耗附件
		if(StrUtil.isNotEmpty(vehicleVO.getRanliaoxiaohaofujian())){
			vehicleVO.setRanliaoxiaohaofujian(fileUploadClient.getUrl(vehicleVO.getRanliaoxiaohaofujian()));
		}
		//行驶证附件
		if(StrUtil.isNotEmpty(vehicleVO.getXingshifujian())){
			vehicleVO.setXingshifujian(fileUploadClient.getUrl(vehicleVO.getXingshifujian()));
		}
		//根据当前车辆id获取当班驾驶员id
		CheliangrenyuanbangdingPage Page=new CheliangrenyuanbangdingPage();
		Page.setDeptId(vehicleVO.getDeptId());
		Page.setCheliangid(vehicleVO.getId());
		Page.setShifoudangban("0");
		CheliangrenyuanbangdingPage<CheliangrenyuanbangdingVO> pages = cheliangrenyuanbangdingService.selectPageList(Page);
		map.put("cheliang",vehicleVO);
		JiaShiYuan detal=new JiaShiYuan();
		if(pages!=null){
			//获取驾驶员信息
			List<CheliangrenyuanbangdingVO> records = pages.getRecords();
			if(records != null && records.size()>0){
				detal=iJiaShiYuanService.selectByIds(records.get(0).getJiashiyuanid());
			}
			//照片
			if(StrUtil.isNotEmpty(detal.getZhaopian())){
				detal.setZhaopian(fileUploadClient.getUrl(detal.getZhaopian()));
			}
			//身份证附件
			if(StrUtil.isNotEmpty(detal.getShenfenzhengfujian())){
				detal.setShenfenzhengfujian(fileUploadClient.getUrl(detal.getShenfenzhengfujian()));
			}
			//从业证附件
			if(StrUtil.isNotEmpty(detal.getCongyezhengfujian())){
				detal.setCongyezhengfujian(fileUploadClient.getUrl(detal.getCongyezhengfujian()));
			}
			//驾驶证附件
			if(StrUtil.isNotEmpty(detal.getJiashizhengfujian())){
				detal.setJiashizhengfujian(fileUploadClient.getUrl(detal.getJiashizhengfujian()));
			}
			//复印件
			if(StrUtil.isNotEmpty(detal.getFuyinjian())){
				detal.setFuyinjian(fileUploadClient.getUrl(detal.getFuyinjian()));
			}
		}

		map.put("jiashiyuan",detal);
		return R.data(map);
	}

    @PostMapping("/insert")
	@ApiLog("新增-车辆资料管理")
    @ApiOperation(value = "新增-车辆资料管理", notes = "传入Vehicle", position = 3)
    public R insert(@RequestBody Vehicle vehicle,BladeUser user) {
		VehicleVO vehicleVO = vehicleService.selectByCPYS(vehicle.getCheliangpaizhao(),vehicle.getChepaiyanse());
		if(vehicleVO!=null){
			return R.fail("该车已存在");
		}
		vehicle.setCaozuoren(user.getUserName());
		vehicle.setCaozuorenid(user.getUserId());
		vehicle.setCaozuoshijian(LocalDateTime.now());
		vehicle.setCreatetime(LocalDateTime.now());
		if("".equals(vehicle.getRuhushijian())){
			vehicle.setRuhushijian(null);
		}
		if("".equals(vehicle.getZhucedengjishijian())){
			vehicle.setZhucedengjishijian(null);
		}
		if("".equals(vehicle.getGuohushijian())){
			vehicle.setGuohushijian(null);
		}
		if("".equals(vehicle.getTuishishijian())){
			vehicle.setTuishishijian(null);
		}
		if("".equals(vehicle.getQiangzhibaofeishijian())){
			vehicle.setQiangzhibaofeishijian(null);
		}
		if("".equals(vehicle.getChuchangriqi())){
			vehicle.setChuchangriqi(null);
		}
		if("".equals(vehicle.getGpsanzhuangshijian())){
			vehicle.setGpsanzhuangshijian(null);
		}
		String str="1";
		//登录页
		if(StringUtil.isNotBlank(vehicle.getCheliangzhaopian())){
			fileUploadClient.updateCorrelation(vehicle.getCheliangzhaopian(),str);
		}
        return R.status(vehicleService.save(vehicle));
    }

    @PostMapping("/update")
	@ApiLog("修改-车辆资料管理")
    @ApiOperation(value = "修改-车辆资料管理", notes = "传入Vehicle", position = 4)
    public R update(@RequestBody Vehicle vehicle,BladeUser user) {
		vehicle.setCaozuoren(user.getUserName());
		vehicle.setCaozuorenid(user.getUserId());
		vehicle.setCaozuoshijian(LocalDateTime.now());
		if("".equals(vehicle.getCreatetime())){
			vehicle.setCreatetime(LocalDateTime.now());
		}
		if("".equals(vehicle.getRuhushijian())){
			vehicle.setRuhushijian(null);
		}
		if("".equals(vehicle.getZhucedengjishijian())){
			vehicle.setZhucedengjishijian(null);
		}
		if("".equals(vehicle.getGuohushijian())){
			vehicle.setGuohushijian(null);
		}
		if("".equals(vehicle.getTuishishijian())){
			vehicle.setTuishishijian(null);
		}
		if("".equals(vehicle.getQiangzhibaofeishijian())){
			vehicle.setQiangzhibaofeishijian(null);
		}
		if("".equals(vehicle.getChuchangriqi())){
			vehicle.setChuchangriqi(null);
		}
		if("".equals(vehicle.getGpsanzhuangshijian())){
			vehicle.setGpsanzhuangshijian(null);
		}
        return R.status(vehicleService.updateById(vehicle));
    }

    @PostMapping("/del")
	@ApiLog("删除-车辆资料管理")
    @ApiOperation(value = "删除-车辆资料管理", notes = "传入车辆id", position = 5)
    public R del(@RequestParam String id) {
        return R.status(vehicleService.deleleVehicle(id));
    }

    /********************************** 配置表 ***********************/
    /**
     * 配置表新增
     */
    @PostMapping("/insertMap")
	@ApiLog("配置表新增-车辆资料管理")
    @ApiOperation(value = "配置表新增-车辆资料管理", notes = "传入biaodancanshu与deptId", position = 6)
    public R insertMap(String biaodancanshu,String deptId) {
		Configure configure=new Configure();
		JSONObject jsonObject = JSONUtil.parseObj(biaodancanshu);
		configure.setLabel(jsonObject.getStr("label"));
		configure.setShujubiaoziduan(jsonObject.getStr("prop"));
		configure.setDeptId(Integer.parseInt(deptId));
		configure.setTableName("anbiao_vehicle_map");
		configure.setBiaodancanshu(biaodancanshu);
		return R.status(mapService.insertMap(configure));
    }

    /**
     * 配置表编辑
     */
    @PostMapping("/updateMap")
	@ApiLog("配置表编辑-车辆资料管理")
    @ApiOperation(value = "配置表编辑-车辆资料管理", notes = "传入biaodancanshu与id", position = 7)
    public R updateMap(String biaodancanshu, String id) {
        Configure configure = new Configure();
        JSONObject jsonObject = JSONUtil.parseObj(biaodancanshu);
		configure.setId(id);
		configure.setLabel(jsonObject.getStr("label"));
		configure.setShujubiaoziduan(jsonObject.getStr("prop"));
		configure.setTableName("anbiao_vehicle_map");
		configure.setBiaodancanshu(biaodancanshu);
        return R.status(mapService.updateMap(configure));
    }

    /**
     * 配置表删除
     */
    @PostMapping("/delMap")
	@ApiLog("配置表删除-车辆资料管理")
    @ApiOperation(value = "配置表删除-车辆资料管理", notes = "传入id", position = 8)
    public R delMap(@ApiParam(value = "主键id", required = true) @RequestParam String id) {
        return R.status(mapService.delMap("anbiao_vehicle_map", id));
    }

    /**
     * @Description: 根据岗位id获取车辆配置模块数据
     * @Param: [deptId]
     * @return: org.springblade.core.tool.api.R<java.util.List>
     * @Author: elvis.he
     * @date : 2019-04-28
     */
    @GetMapping("/listMap")
	@ApiLog("获取车辆配置-车辆资料管理")
    @ApiOperation(value = "获取车辆配置-车辆资料管理", notes = "传入deptId", position = 9)
    public R<JSONArray> listMap(Integer deptId) {
        List<Configure> list1 = mapService.selectMapList("anbiao_vehicle_map", deptId);
        String str = "";
        for (int i = 0; i < list1.size(); i++) {
            //转换成json数据并put id
            JSONObject jsonObject = JSONUtil.parseObj(list1.get(i).getBiaodancanshu());
            jsonObject.put("id", list1.get(i).getId());
            if (!str.equals("")) {
                str = str + "," + jsonObject.toString();
            } else {
                str = jsonObject.toString();
            }
        }
        str = "[" + str + "]";
        JSONArray json = JSONUtil.parseArray(str);
        return R.data(json);
    }
	/**
	 * 车辆资料导入
	 * @author: LH
	 * @date: 2019/8/19 16:23
	 * @param
	 * @return: org.springblade.core.tool.api.R
	 */
	@PostMapping("vehicleImportOne")
	@ApiLog("车辆资料-导入(本企业)")
	@ApiOperation(value = "车辆资料-导入(本企业)", notes = "file", position = 10)
	public  R vehicleImportOne(@RequestParam(value = "file") MultipartFile file,BladeUser user,String DeptId,String DeptName){

		ExcelReader reader = null;
		try {
			reader = ExcelUtil.getReader(file.getInputStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		List<Map<String,Object>> readAll = reader.readAll();
		int index=readAll.size();
		if(index>5000){

			return  R.fail("导入条目不能超过5000条");

		}
		int aa=0;
		int bb=0;
		List<Vehicle> vehicles=new ArrayList<Vehicle>();
		boolean b=true;
		for(Map<String,Object> a:readAll){
			aa++;
			Vehicle vehicle=new Vehicle();
			String id=IdUtil.simpleUUID();
			vehicle.setId(id);
			vehicle.setDeptId(Integer.valueOf(DeptId));
			vehicle.setDeptName(DeptName);

			String cheliangpaiz=String.valueOf(a.get("车辆牌照"));
			String chepaiyanse=String.valueOf(a.get("车牌颜色"));
			vehicle.setCheliangpaizhao(cheliangpaiz);
			vehicle.setChepaiyanse(chepaiyanse);
			VehicleVO vehicleVO = vehicleService.selectByCPYS(cheliangpaiz,chepaiyanse);
			if(vehicleVO!=null){
				vehicle.setMsg("该车已存在");
				vehicle.setMsg2(false);
				bb++;
			}else{
				vehicle.setMsg2(true);
			}
			vehicle.setShiyongxingzhi(String.valueOf(a.get("使用性质")));
			vehicle.setJiashiyuanid(null);
			vehicle.setChangpai(String.valueOf(a.get("厂牌")));
			vehicle.setXinghao(String.valueOf(a.get("型号")));
			vehicle.setChejiahao(String.valueOf(a.get("车架号")));
			vehicle.setLuntaiguige(String.valueOf(a.get("轮胎规格")));
			vehicle.setCheshenyanse(String.valueOf(a.get("车身颜色")));
			vehicle.setHedingzaike(String.valueOf(a.get("核定载客")));
			vehicle.setYingyunnianxian(null);
			vehicle.setDengjizhengshubianhao(String.valueOf(a.get("车辆登记证书编号")));
			vehicle.setChelianglaiyuan(String.valueOf(a.get("车辆来源")));
			vehicle.setZhucedengjishijian(String.valueOf(a.get("注册登记日期")));
			vehicle.setRuhushijian(null);
			vehicle.setGuohushijian(null);
			vehicle.setTuishishijian(null);
			vehicle.setQiangzhibaofeishijian(String.valueOf(a.get("强制报废日期")));
			vehicle.setJieboyunshuzhenghao(String.valueOf(a.get("接驳运输证号")));
			vehicle.setYuancheliangpaizhao(String.valueOf(a.get("原车辆牌照")));
			vehicle.setCheliangzhuangtai("0");
			vehicle.setCheliangtingfangdiqu(null);
			vehicle.setDanganhao(String.valueOf(a.get("档案号")));
			vehicle.setBeiyongcheliang(String.valueOf(a.get("备用车辆")));
			vehicle.setYunyingshang(null);
			vehicle.setSuoshuchedui(null);
			vehicle.setXingshifujian(null);
			vehicle.setFujian(null);
			vehicle.setFadongjixinghao(String.valueOf(a.get("发动机型号")));
			vehicle.setFadongjihao(String.valueOf(a.get("发动机号")));
			vehicle.setFadongjipailianggonglv(String.valueOf(a.get("排量功率")));
			vehicle.setRanliaoleibie(String.valueOf(a.get("燃料类别")));
			vehicle.setRanyouxiaohao(null);
			vehicle.setPaifangbiaozhun(null);
			vehicle.setZhuanxiangfangshi(String.valueOf(a.get("转向方式")));
			vehicle.setChemenshezhi(String.valueOf(a.get("车门设置")));
			vehicle.setZhouju(String.valueOf(a.get("轴距")));
			vehicle.setChechang(String.valueOf(a.get("车长")));
			vehicle.setChekuan(String.valueOf(a.get("车宽")));
			vehicle.setChegao(String.valueOf(a.get("车高")));
			vehicle.setLuntaishu(null);
			vehicle.setChezhoushu(String.valueOf(a.get("车轴数")));
			vehicle.setGangbantanhuangpianshu(null);
			vehicle.setDipanxinghao(null);
			vehicle.setDonglileixing(null);
			vehicle.setZongzhiliang(String.valueOf(a.get("总质量")));
			vehicle.setZhengbeizhiliang(String.valueOf(a.get("整备质量")));
			vehicle.setLuntaizonglei(null);
			vehicle.setXuanguaxingshi(String.valueOf(a.get("悬挂形式")));
			vehicle.setXingchezhidongfangshi(null);
			vehicle.setZhidongqiqianlun(null);
			vehicle.setZhidongqihoulun(null);
			vehicle.setAbs(String.valueOf(a.get("ABS")));
			vehicle.setKongtiaoxitong(String.valueOf(a.get("空调系统")));
			vehicle.setHuanshuqi(String.valueOf(a.get("缓速器")));
			vehicle.setBiansuxiangxingshi(null);
			vehicle.setZhizhaochangshang(String.valueOf(a.get("制造厂商名称")));
			vehicle.setGouzhishuizhenghao(null);
			vehicle.setChuchangriqi(null);
			vehicle.setLeijilicheng(null);
			vehicle.setZhongduanfuwuqi(null);
//			vehicle.setCheliangdengji(String.valueOf(a.get("车辆等级")));
			vehicle.setWeishengjian(null);
			vehicle.setFadongjipailiang(null);
			vehicle.setCheliangwaikuochicun(null);
			vehicle.setRanliaoxiaohaofujian(null);
			vehicle.setBeizhu(null);
			vehicle.setGpsanzhuangshijian(null);
			vehicle.setZhinenghuaxitong(String.valueOf(a.get("智能化系统")));
			vehicle.setGps(null);
			vehicle.setXingshijiluyi(null);
			vehicle.setZongduanid(null);
			vehicle.setZongduanxinghao(null);
			vehicle.setCheliangzhaopian(null);
//			vehicle.setYunshujiezhi(String.valueOf(a.get("运输介质")));
			vehicle.setCreatetime(LocalDateTime.now());
			if(user!=null){
				vehicle.setCaozuoren(user.getUserName());
				vehicle.setCaozuorenid(user.getUserId());
			}
			vehicle.setCaozuoshijian(LocalDateTime.now());

			vehicles.add(vehicle);

		}
		if(bb>0){
			return  R.data(400, vehicles,"导入失败");
		}else{
			b=vehicleService.saveBatch(vehicles);
			if(b){
				return  R.success("成功导入:"+aa+"条");
			}else{
				return  R.fail("导入失败");
			}
		}
	}

	/**
	 * 车辆信息-导入
	 * @author: elvis
	 * @date: 2020/06/19 10:23
	 * @param
	 * @return: org.springblade.core.tool.api.R
	 */
	@PostMapping("vehicleImport")
	@ApiLog("车辆信息-导入")
	@ApiOperation(value = "车辆信息-导入", notes = "file", position = 10)
	public R vehicleImport(@RequestParam(value = "file") MultipartFile file, BladeUser user){

		ExcelReader reader = null;
		try {
			reader = ExcelUtil.getReader(file.getInputStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		List<Map<String,Object>> readAll = reader.readAll();
		int index=readAll.size();
		if(index>5000){
			return  R.fail("导入条目不能超过5000条");
		}
		int aa=0;
		int bb=0;
		List<Vehicle> vehicles=new ArrayList<Vehicle>();
		boolean b=true;
		for(Map<String,Object> a:readAll){
			aa++;
			Vehicle vehicle=new Vehicle();
			Dept dept;
			String id=IdUtil.simpleUUID();
			vehicle.setId(id);
			String deptname =  String.valueOf(a.get("机构名称"));
			dept = iSysClient.getDeptByName(deptname);
			if (dept != null){
				vehicle.setDeptId(Integer.valueOf(dept.getId()));
				vehicle.setDeptName(dept.getDeptName());
			}else{
				vehicle.setMsg("机构不存在");
				vehicle.setMsg2(false);
				bb++;
			}
			String cheliangpaiz=String.valueOf(a.get("车辆牌照"));
			String chepaiyanse=String.valueOf(a.get("车牌颜色"));
			vehicle.setCheliangpaizhao(cheliangpaiz);
			vehicle.setChepaiyanse(chepaiyanse);
			VehicleVO vehicleVO = vehicleService.selectByCPYS(cheliangpaiz,chepaiyanse);
			if(vehicleVO!=null){
				vehicle.setMsg("该车已存在");
				vehicle.setMsg2(false);
				bb++;
			}else{
				vehicle.setMsg2(true);
			}
			vehicle.setShiyongxingzhi(String.valueOf(a.get("使用性质")));
			vehicle.setJiashiyuanid(null);
			vehicle.setChangpai(String.valueOf(a.get("厂牌")));
			vehicle.setXinghao(String.valueOf(a.get("型号")));
			vehicle.setChejiahao(String.valueOf(a.get("车架号")));
			vehicle.setLuntaiguige(String.valueOf(a.get("轮胎规格")));
			vehicle.setCheshenyanse(String.valueOf(a.get("车身颜色")));
			vehicle.setHedingzaike(String.valueOf(a.get("核定载客")));
			vehicle.setYingyunnianxian(null);
			vehicle.setDengjizhengshubianhao(String.valueOf(a.get("车辆登记证书编号")));
			vehicle.setChelianglaiyuan(String.valueOf(a.get("车辆来源")));
			vehicle.setZhucedengjishijian(String.valueOf(a.get("注册登记日期")));
			vehicle.setRuhushijian(null);
			vehicle.setGuohushijian(null);
			vehicle.setTuishishijian(null);
			vehicle.setQiangzhibaofeishijian(String.valueOf(a.get("强制报废日期")));
			vehicle.setJieboyunshuzhenghao(String.valueOf(a.get("接驳运输证号")));
			vehicle.setYuancheliangpaizhao(String.valueOf(a.get("原车辆牌照")));
			vehicle.setCheliangzhuangtai("0");
			vehicle.setCheliangtingfangdiqu(null);
			vehicle.setDanganhao(String.valueOf(a.get("档案号")));
			vehicle.setBeiyongcheliang(String.valueOf(a.get("备用车辆")));
			vehicle.setYunyingshang(null);
			vehicle.setSuoshuchedui(null);
			vehicle.setXingshifujian(null);
			vehicle.setFujian(null);
			vehicle.setFadongjixinghao(String.valueOf(a.get("发动机型号")));
			vehicle.setFadongjihao(String.valueOf(a.get("发动机号")));
			vehicle.setFadongjipailianggonglv(String.valueOf(a.get("排量功率")));
			vehicle.setRanliaoleibie(String.valueOf(a.get("燃料类别")));
			vehicle.setRanyouxiaohao(null);
			vehicle.setPaifangbiaozhun(null);
			vehicle.setZhuanxiangfangshi(String.valueOf(a.get("转向方式")));
			vehicle.setChemenshezhi(String.valueOf(a.get("车门设置")));
			vehicle.setZhouju(String.valueOf(a.get("轴距")));
			vehicle.setChechang(String.valueOf(a.get("车长")));
			vehicle.setChekuan(String.valueOf(a.get("车宽")));
			vehicle.setChegao(String.valueOf(a.get("车高")));
			vehicle.setLuntaishu(null);
			vehicle.setChezhoushu(String.valueOf(a.get("车轴数")));
			vehicle.setGangbantanhuangpianshu(null);
			vehicle.setDipanxinghao(null);
			vehicle.setDonglileixing(null);
			vehicle.setZongzhiliang(String.valueOf(a.get("总质量")));
			vehicle.setZhengbeizhiliang(String.valueOf(a.get("整备质量")));
			vehicle.setLuntaizonglei(null);
			vehicle.setXuanguaxingshi(String.valueOf(a.get("悬挂形式")));
			vehicle.setXingchezhidongfangshi(null);
			vehicle.setZhidongqiqianlun(null);
			vehicle.setZhidongqihoulun(null);
			vehicle.setAbs(String.valueOf(a.get("ABS")));
			vehicle.setKongtiaoxitong(String.valueOf(a.get("空调系统")));
			vehicle.setHuanshuqi(String.valueOf(a.get("缓速器")));
			vehicle.setBiansuxiangxingshi(null);
			vehicle.setZhizhaochangshang(String.valueOf(a.get("制造厂商名称")));
			vehicle.setGouzhishuizhenghao(null);
			vehicle.setChuchangriqi(null);
			vehicle.setLeijilicheng(null);
			vehicle.setZhongduanfuwuqi(null);
//			vehicle.setCheliangdengji(String.valueOf(a.get("车辆等级")));
			vehicle.setWeishengjian(null);
			vehicle.setFadongjipailiang(null);
			vehicle.setCheliangwaikuochicun(null);
			vehicle.setRanliaoxiaohaofujian(null);
			vehicle.setBeizhu(null);
			vehicle.setGpsanzhuangshijian(null);
			vehicle.setZhinenghuaxitong(String.valueOf(a.get("智能化系统")));
			vehicle.setGps(null);
			vehicle.setXingshijiluyi(null);
			vehicle.setZongduanid(null);
			vehicle.setZongduanxinghao(null);
			vehicle.setCheliangzhaopian(null);
//			vehicle.setYunshujiezhi(String.valueOf(a.get("运输介质")));
			vehicle.setCreatetime(LocalDateTime.now());
			if(user == null){
				vehicle.setMsg("用户对象为空");
				vehicle.setMsg2(false);
			}else{
				vehicle.setCaozuoren(user.getUserName());
				vehicle.setCaozuorenid(user.getUserId());
			}
			vehicle.setCaozuoshijian(LocalDateTime.now());
			vehicles.add(vehicle);
		}
		if(bb>0){
			return  R.data(400,vehicles,"导入失败");
		}else{
			b=vehicleService.saveBatch(vehicles);
			if(b){
				return  R.success("成功导入:"+aa+"条");
			}else{
				return  R.fail("导入失败");
			}
		}
	}

	@PostMapping("vehiceCount")
	@ApiLog("车辆统计")
	@ApiOperation(value = "车辆统计", notes = "传入deptId", position = 10)
	public  R vehiceCount(@ApiParam(value = "企业id", required = true) @RequestParam Integer deptId,@ApiParam(value = "企业名称", required = true) @RequestParam String company){
		List<VehiclePT> vehiclePT2 = iGpsPointDataClient.getVehiclePT2(company);
		int count = vehicleService.vehicleDayCount(deptId); //查询车辆总数
		VehicleCount vehicleCount=new VehicleCount();
		if(vehiclePT2==null){
					vehicleCount.setVehicleCount(count);
				return R.data(vehicleCount);
		}
		int zaiixan=0;//在线车辆
		int lixian=0;//离线车辆
		int xianzhi=0;//闲置车辆
		for(VehiclePT item:vehiclePT2){
			if("运行".equals(item.getStatus()) || "停车".equals(item.getStatus())){
				zaiixan++;
			}
			if("离线".equals(item.getStatus())){
				lixian++;
			}
			if("闲置".equals(item.getStatus())){
				xianzhi++;
			}

		}
		//List<String> xianzhilist = vehicleService.xianzhiVecleCount(deptId); //查询闲置总数

		vehicleCount.setVehicleCount(count); //设置企业车辆总数
		vehicleCount.setXianzhiVehicleCount(xianzhi);//设置闲置车子总数
		vehicleCount.setYunxingVehicleCount(zaiixan);//设置运行车辆总数
		vehicleCount.setLixianVehicleCount(lixian);//设置离线车辆总数
		vehicleCount.setWeixiuVehicleCount(0);//维修车辆无法判断默认为0
		return R.data(vehicleCount);

	}
	@PostMapping("vehicledetai")
	@ApiLog("车辆详情-车牌-车牌颜色")
	@ApiOperation(value = "车辆详情-车牌-颜色", notes = "传入车牌 车牌颜色", position = 11)
	public  R vehicledetai(@ApiParam(value = "车牌", required = true) @RequestParam String cheliangpaizhao,
						   @ApiParam(value = "车牌颜色", required = true) @RequestParam String chepaiyanse,
						   @ApiParam(value = "deptId", required = true) @RequestParam Integer deptId){
		Vehicle vehicle = vehicleService.vehileOne(cheliangpaizhao, chepaiyanse,deptId);
		return R.data(vehicle);
	}
	@PostMapping("/GPSVehicledetail")
	@ApiLog("获取车辆详情gps信息")
	@ApiOperation(value = "获取gps车辆详情", notes = "获取车辆gps详情", position = 2)
	public R getVehicledetail(@ApiParam(value = "单位名称", required = true) @RequestParam String plateNumber
		,@ApiParam(value = "单位名称", required = true) @RequestParam String company){
		List<VehiclePT> vehiclePT2 = iGpsPointDataClient.getVehiclePT2(company);
		GpsVehicleDetail gps=new GpsVehicleDetail();
		for(VehiclePT  index:vehiclePT2){
				if(plateNumber.equals(index.getCph())){
					gps.setVehiclestatus(index.getStatus());
					gps.setLongitude(index.getLongitude());
					gps.setGpstime(index.getGpstime());
					gps.setLatitude(index.getLatitude());
					break;
				}
		}
		return  R.data(gps);
	}

	@GetMapping("/getVehicleAll")
	@ApiLog("GPS获取车辆资料")
	@ApiOperation(value = "GPS获取车辆资料", notes = "传入caozuoshijian", position = 2)
	public R<List<VehicleVO>> getVehicleAll(String caozuoshijian) {
		List<VehicleVO> detail = vehicleService.selectVehicleAll(caozuoshijian);
		return R.data(detail);
	}

}
